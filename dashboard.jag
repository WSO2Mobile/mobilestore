<%
var caramel;
( function() {
    var site, count, tag,
            type = 'gadget',
            log = new Log(),
            store = require('/modules/store.js').store(request, session),
            types = store.assetTypes(),
            user = require('/modules/user.js').current(session),
            tags = [],
            sso = configs.ssoConfiguration.enabled;
	caramel = require('caramel');

 	var rxtAttributes = require('modules/util.js').getRXTAttributes(store.tenantId, type);

	if(!user) {
		response.sendRedirect(caramel.configs().context);
		return;
	}
	site = require('/modules/site.js');
	recentGadgets = store.recentAssets("gadget", 3);
	recentSites = store.recentAssets("site", 3);
	recentEBooks = store.recentAssets("ebook", 3);
	var recentAssets = recentGadgets.concat(recentSites,recentEBooks);
    var subscriptions = store.subscriptions();
	count = Object.keys(subscriptions).length;

	for(var i = 0; i < types.length; i++) {
		tag = {
			url : '/assets/' + types[i] + '?page=1&tag=',
			data : store.tags(types[i])
		};
		tags[i] = tag;
	}

	caramel.render({
		'title' : 'Store | My Bookmarks',
		'navigation' : site.navigation(store.tenantId, {
			sso : sso,
			user : user
		}),
		 search: {
			mainPage : "My bookmarks",
			subPage : "",
			isTopAssets : false,
            searchFields : rxtAttributes
		},
		'userAssets' : count > 0 ? subscriptions : null,
		'recentAssets' : recentAssets,
		'tags' : tags
	});
}());
%>