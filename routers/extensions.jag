<%
var type;
(function () {
    var prefix, path, elements, theme, mapper, suffix, pages, links, length, link, i, mod,
            log = new Log(),
            config = require('/store.js').config(),
            store = require('/modules/store.js'),
            file = require('/modules/file.js'),
            matcher = new URIMatcher(request.getRequestURI());
    mapper = function (path) {
        return function () {
            return path;
        };
    };
    if (matcher.match('/{context}' + store.ASSETS_EXT_PATH + '{type}/themes/{+file}')) {
        elements = matcher.elements();
        type = elements.type;
        if (configs.assets.indexOf(type) === -1) {
            response.sendError(404, 'Request Resource cannot be found');
            return;
        }
        prefix = store.ASSETS_EXT_PATH + type;
        file.send(prefix + '/themes/' + elements.file);
        return;
    }
    if (matcher.match('/{context}' + store.ASSETS_EXT_PATH + '{type}/{+suffix}')) {
        mod = require('/modules/store.js');
        elements = matcher.elements();
        type = elements.type;
        suffix = elements.suffix;
        pages = store.ASSETS_EXT_PATH + type + '/pages/';
        if (suffix) {
            links = mod.store(request, session).assetLinks(type);
            length = links.length;
            for (i = 0; i < length; i++) {
                link = links[i];
                if (link.url === suffix) {
                    path = link.path || link.url;
                    break;
                }
            }
            path = (suffix === 'process') ? 'process.jag' : path;
            if (path) {
                path = pages + path;
                request.getMappedPath = mapper(path);
                include(path);
                return;
            }
        }
    }
    response.sendError(404, 'Requested Resource cannot be found');
}());
%>